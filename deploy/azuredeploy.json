{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appServiceCustomDomain": {
      "type": "string",
      "metadata": {
        "description": "App Service custom domain name."
      }
    },
    "appServicePlanPricingTier": {
      "type": "string",
      "allowedValues": [
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P1v2",
        "P2v2",
        "P3v2"
      ],
      "metadata": {
        "description": "App Service Plan's Pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
      }
    },
    "appServicePlanInstances": {
      "type": "int",
      "minValue": 1,
      "metadata": {
        "description": "App Service Plan's instance count"
      }
    },
    "signalRServicePricingTier": {
      "type": "string",
      "allowedValues": [
        "Free_F1",
        "Standard_S1"
      ],
      "metadata": {
        "description": "SignalR Service Pricing tier. Check details at https://azure.microsoft.com/en-us/pricing/details/signalr-service/"
      }
    },
    "signalRServiceUnits": {
      "type": "int",
      "minValue": 1,
      "allowedValues": [
        1,
        2,
        5,
        10,
        20,
        50,
        100
      ],
      "metadata": {
        "description": "SignalR Service unit count"
      }
    },
    "aadClientId": {
      "type": "string",
      "metadata": {
        "description": "ClientId of the AzureAD application used for authentication."
      }
    },
    "linuxFxVersion": {
      "type": "string",
      "metadata": {
        "description": "Linux App Framework and version. E.g. 'DOCKER|jannemattila/quizmaker:latest'"
      }
    },
    "storageType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "appName": "quiz",
    "appInsightsName": "[concat(variables('appName'), 'AppInsights')]",
    "appSignalRName": "[concat('qm', uniqueString(resourceGroup().id))]",
    "appStorageName": "[concat('qm', uniqueString(resourceGroup().id))]",
    "appServiceName": "[concat(variables('appName'), uniqueString(resourceGroup().id))]",
    "appServicePlanName": "[concat(variables('appName'), 'AppServicePlan')]"
  },
  "resources": [
    {
      "name": "[parameters('appServiceCustomDomain')]",
      "type": "Microsoft.Web/certificates",
      "apiVersion": "2019-08-01",
      "location": "[parameters('location')]",
      "properties": {
        "hostNames": [
          "[parameters('appServiceCustomDomain')]"
        ]
      }
    },
    {
      "name": "[variables('appInsightsName')]",
      "type": "Microsoft.Insights/components",
      "location": "[parameters('location')]",
      "apiVersion": "2015-05-01",
      "kind": "web",
      "dependsOn": [],
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('appServiceName'))]": "Resource"
      },
      "properties": {
        "Application_Type": "web",
        "applicationId": "[resourceId('Microsoft.Web/sites', variables('appServiceName'))]"
      }
    },
    {
      "name": "[variables('appSignalRName')]",
      "type": "Microsoft.SignalRService/SignalR",
      "location": "[parameters('location')]",
      "apiVersion": "2018-10-01",
      "sku": {
        "name": "[parameters('signalRServicePricingTier')]",
        "capacity": "[parameters('signalRServiceUnits')]"
      },
      "properties": {
        "hostNamePrefix": "[variables('appSignalRName')]",
        "features": [
          {
            "flag": "ServiceMode",
            "value": "Default"
          }
        ]
      }
    },
    {
      "name": "[variables('appServicePlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[parameters('location')]",
      "apiVersion": "2018-02-01",
      "kind": "linux",
      "sku": {
        "name": "[parameters('appServicePlanPricingTier')]",
        "capacity": "[parameters('appServicePlanInstances')]"
      },
      "properties": {
        "reserved": true
      }
    },
    {
      "name": "[variables('appStorageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('location')]",
      "apiVersion": "2018-02-01",
      "sku": {
        "name": "[parameters('storageType')]"
      },
      "dependsOn": [],
      "tags": {},
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "keySource": "Microsoft.Storage",
          "services": {
            "blob": {
              "enabled": true
            },
            "file": {
              "enabled": true
            }
          }
        }
      }
    },
    {
      "name": "[variables('appServiceName')]",
      "type": "Microsoft.Web/sites",
      "location": "[parameters('location')]",
      "apiVersion": "2018-11-01",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/certificates', parameters('appServiceCustomDomain'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('appStorageName'))]",
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "webSocketsEnabled": true,
          "http20Enabled": true,
          "clientAffinityEnabled": false,
          "ftpsState": "Disabled",
          "linuxFxVersion": "[parameters('linuxFxVersion')]"
        },
        "hostNameSslStates": [
          {
            "name": "[parameters('appServiceCustomDomain')]",
            "sslState": "SniEnabled",
            "hostType": "Standard",
            "thumbprint": "[reference(resourceId('Microsoft.Web/certificates', parameters('appServiceCustomDomain')), '2019-08-01').thumbprint]"
          }
        ]
      }
    },
    {
      "name": "[concat(variables('appServiceName'), '/', parameters('appServiceCustomDomain'))]",
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2019-08-01",
      "kind": "string",
      "dependsOn": [
        "[resourceId('Microsoft.Web/certificates', parameters('appServiceCustomDomain'))]",
        "[resourceId('Microsoft.Web/sites', variables('appServiceName'))]"
      ],
      "properties": {
        "siteName": "[variables('appServiceName')]",
        "customHostNameDnsRecordType": "CName",
        "hostNameType": "Verified",
        "sslState": "SniEnabled",
        "thumbprint": "[reference(resourceId('Microsoft.Web/certificates', parameters('appServiceCustomDomain')), '2019-08-01').thumbprint]"
      }
    },
    {
      "name": "[concat(variables('appServiceName'), '/appsettings')]",
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('appServiceName'))]"
      ],
      "properties": {
        "StorageConnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('appStorageName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('appStorageName')), '2015-05-01-preview').key1)]",
        "SignalRConnectionString": "[listKeys(resourceId('Microsoft.SignalRService/SignalR', variables('appSignalRName')),'2018-10-01').primaryConnectionString]",
        "AzureAD__ClientId": "[parameters('aadClientId')]",
        "WEBSITES_ENABLE_APP_SERVICE_STORAGE": "false",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
      }
    }
  ],
  "outputs": {
    "webAppName": {
      "type": "string",
      "value": "[variables('appServiceName')]"
    },
    "webAppUri": {
      "type": "string",
      "value": "[concat('https://',reference(resourceId('Microsoft.Web/sites', variables('appServiceName'))).hostNames[0])]"
    }
  }
}
